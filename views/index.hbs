<div class="dropdown mainContent mx-auto mt-5">
  <a class="btn btn-light fs-5 dropdown-toggle d-flex justify-content-between align-items-center fw-bold" href="#"
    role="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
    類別
  </a>

  <ul class="dropdown-menu w-100" aria-labelledby="categoryDropdown" id="categoryList"
    onclick="displaySpecRecords(event)">
    <li><button class="dropdown-item categoryBtn fs-5" type="button" data-category-id="-1"
        data-category-name="總覽">總覽</button></li>
    {{#each categories as |category|}}
    <li>
      <button class="dropdown-item categoryBtn fs-5" type="button" data-category-id="{{category.id}}"
        data-category-name="{{category.name}}">
        <i class="{{category.icon}} ignoreClick"></i>
        <span class="ms-3 ignoreClick">{{category.name}}</span>
      </button>
    </li>
    {{/each}}
  </ul>
</div>

<div class="row mainContent mx-auto mt-4" style="position: relative;">
  <div class="d-flex align-items-start" style="position: absolute; top: 0; left: 0;">
    <div class="text-center fs-5">總金額 : </div>
  </div>
  <div class="text-end" style="font-size:72px;color: orangered;" id="totalAmount">0</div>
</div>

<div class="w-100 mt-3" style="position: relative;">
  <div class="listHandler d-flex flex-column justify-content-start align-items-end">
    <button type="button" class="btn btn-primary btn-lg w-100" data-bs-toggle="modal" data-bs-target="#dateRngModal">
      <i class="far fa-calendar-alt"></i>
    </button>
    <button type="button" class="btn btn-primary btn-lg w-100 mt-1" data-bs-toggle="modal"
      data-bs-target="#filterModel">
      <i class="fas fa-filter"></i>
    </button>
    <button type="button" class="btn btn-secondary btn-lg w-100 mt-1" data-bs-toggle="modal"
      data-bs-target="#sortModal">
      <i class="fas fa-sort-amount-down"></i>
    </button>
    <button type="button" class="btn btn-success btn-lg w-100 mt-1" data-bs-toggle="modal" data-bs-target="#chartModal">
      <i class="fas fa-chart-line"></i>
    </button>
  </div>
  <div class="mainContent mx-auto shadow bg-body rounded" id="virtualScrollArea" style="overflow: auto;">
    <div id="recordsContainer" style="overflow:hidden;">
      <div id="displayArea"></div>
    </div>
  </div>
  <div class="recordHandler d-flex flex-column"></div>
</div>

<div class="mx-auto mt-5 mb-3" style="width: 30%;">
  <a href="/records/new" class="w-100 btn btn-warning">新增支出</a>
</div>

<div class="modal fade" id="dateRngModal" tabindex="-1" aria-labelledby="dateRngModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="dateRngModalLabel">指定時段資料</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="input-group mb-3">
          <label for="startTime" class="col-3 col-form-label fs-4 fw-bold">起 :</label>
          <div class="col-9">
            <input type="date" class="form-control fs-4" style="cursor: pointer;" id="startTime"
              onfocus="this.showPicker()" onchange="setEndTimeLimit(event)" onkeydown="return false">
          </div>
        </div>
        <div class="input-group mb-3">
          <label for="endTime" class="col-3 col-form-label fs-4 fw-bold">迄 :</label>
          <div class="col-9">
            <input type="date" class="form-control fs-4" style="cursor: pointer;" id="endTime"
              onfocus="this.showPicker()" disabled onkeydown="return false">
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="getPeriodRecords()">進行篩選</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="filterModel" tabindex="-1" aria-labelledby="filterModelLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="filterModelLabel">過濾支出記錄</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="input-group">
          <span class="input-group-text" id="filterInputLabel">關鍵字</span>
          <input type="text" class="form-control" aria-describedby="filterInputLabel" oninput="processFilter(event)">
        </div>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="sortModal" tabindex="-1" aria-labelledby="sortModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="sortModalLabel">排序支出記錄(遞減)</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="input-group mb-3">
          <label class="input-group-text" for="sortByObj">排序對象</label>
          <select class="form-select" id="sortByObj">
            <option selected value="null" disabled>Choose...</option>
            <option value="name">支出名稱</option>
            <option value="categoryId">支出類別</option>
            <option value="amount">支出金額</option>
          </select>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="sortRecords()">進行排序</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="chartModal" tabindex="-1" aria-labelledby="chartModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-fullscreen">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="chartModalLabel">支出統計</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
      </div>
    </div>
  </div>
</div>
{{> message}}

<script>
  const oriRecords = JSON.parse('{{{toJsonStr records}}}');
  const recordCount = Number('{{{count}}}');
  const scrollToRec = parseInt('{{{scrollTo}}}');
  let records = oriRecords;
  let curCategory = '總覽';
  const totalAmountEle = document.getElementById('totalAmount');
  const processFilter = tools.debounce(filterRecords);
  const vsHandler = new virtualScroll.VShandler(records, 'virtualScrollArea', 'recordsContainer', 'displayArea');
  const curTime = new Date();
  const curDateStr = `${curTime.getFullYear()}-${`0${curTime.getMonth() + 1}`.slice(-2)}-${curTime.getDate()}`;
  const startTimeEle = document.getElementById('startTime');
  const endTimeEle = document.getElementById('endTime');

  function handleRecordsChange() {
    cssTricks.animateNumber(totalAmountEle, records.reduce((sum, record) => sum + record.amount, 0), 1000);
    document.querySelector('.recordHandler').innerHTML = Array.from({ length: 5 }, (_, index) => index).reduce((html, index) => (
      html + '<div class="btnField" style="height:20%">'
      + `${index < records.length
        ? `
            <a href="/records/${records[index].id}/edit" class="btn btn-primary" id="editBtn${index}"></a>
            <form action="/records/${records[index].id}?_method=DELETE" method="post" style="display:inline-block;" id="deleteForm${index}"
              data-record-info="[${records[index].date}] ${records[index].name} \$${records[index].amount}"  onsubmit="handleDeleteReq(event)">
              <button type="submit" class="btn btn-danger""></button>
            </form>
          `
        : ''
      }`
      + '</div>'
    ), '');
    vsHandler.handleScrollContentChange(records);
  }

  function displaySpecRecords(event) {
    if (event.target.matches('.categoryBtn')) {
      const reqCategoryName = event.target.dataset.categoryName;
      const reqCategoryId = Number(event.target.dataset.categoryId);

      document.getElementById('categoryDropdown').textContent = reqCategoryName;
      if (curCategory !== reqCategoryName) {
        records = reqCategoryId === -1
          ? oriRecords : oriRecords.filter((record) => record.categoryId === reqCategoryId);
        handleRecordsChange();
      }
      curCategory = reqCategoryName;
    }
  }

  function handleDeleteReq(event) {
    event.preventDefault();
    if (window.confirm(`確定要刪出該筆支出 "${event.target.dataset.recordInfo}"?`)) {
      event.target.submit();
    }
  }

  startTimeEle.setAttribute('max', curDateStr);
  endTimeEle.setAttribute('max', curDateStr);

  function setEndTimeLimit(event) {
    const startTime = event.target.value;

    if (startTime) {
      endTimeEle.removeAttribute('disabled');
      if (startTime === curDateStr) endTimeEle.value = curDateStr;
      endTimeEle.setAttribute('min', event.target.value);
    } else {
      endTimeEle.setAttribute('disabled', true);
    }
  }

  function getPeriodRecords() {
    const startTimeStr = startTimeEle.value;
    const endTimeStr = endTimeEle.value;

    if (startTimeStr === '' || endTimeStr === '') records = oriRecords;
    else {
      const dateList = [];
      const endTime = new Date(endTimeStr).getTime();

      for (let curDate = new Date(startTimeStr); curDate.getTime() <= endTime; curDate.setDate(curDate.getDate() + 1)) {
        dateList.push(`${curDate.getFullYear()}-${`0${curDate.getMonth() + 1}`.slice(-2)}-${curDate.getDate()}`);
      }
      records = records.filter((record) => dateList.includes(record.date));
    }
    handleRecordsChange();
  }

  function filterRecords(event) {
    const keyword = event.target.value;

    if (keyword === '') records = oriRecords;
    else {
      records = records.filter((record) => (
        record.name.includes(keyword) || record.date.includes(keyword) || record.amount.toString().includes(keyword)
      ));
    }
    handleRecordsChange();
  }

  function sortRecords() {
    const sortObj = document.getElementById('sortByObj').value;

    switch (sortObj) {
      case 'name':
      case 'date':
        records.sort((a, b) => b[sortObj].localeCompare(a[sortObj]));
        break;
      case 'categoryId':
      case 'amount':
        records.sort((a, b) => b[sortObj] - a[sortObj]);
        break;
      default:
    }
    if (sortObj) handleRecordsChange();
  }

  handleRecordsChange();

  if (!isNaN(scrollToRec)) {
    const scrollDist = (recordCount - scrollToRec) * 100;
    document.getElementById('virtualScrollArea').scrollTop = scrollDist;
  }
</script>