<div class="dropdown w-50 mx-auto mt-5">
  <a class="btn btn-light fs-5 dropdown-toggle d-flex justify-content-between align-items-center fw-bold" href="#"
    role="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
    類別
  </a>

  <ul class="dropdown-menu w-100" aria-labelledby="categoryDropdown" id="categoryList"
    onclick="displaySpecRecords(event)">
    <li><button class="dropdown-item categoryBtn fs-5" type="button" data-category-id="-1"
        data-category-name="總覽">總覽</button></li>
    {{#each categories as |category|}}
    <li>
      <button class="dropdown-item categoryBtn fs-5" type="button" data-category-id="{{category.id}}"
        data-category-name="{{category.name}}">
        <i class="{{category.icon}} ignoreClick"></i>
        <span class="ms-3 ignoreClick">{{category.name}}</span>
      </button>
    </li>
    {{/each}}
  </ul>
</div>

<div class="row w-50 mx-auto mt-4">
  <div class="col-3 d-flex align-items-start">
    <div class="text-center fs-5">總金額 : </div>
  </div>
  <div class="col-9 text-end" style="font-size:72px;color: orangered;" id="totalAmount">0</div>
</div>

<div class="w-100 mt-3" style="position: relative;">
  <div class="w-50 mx-auto shadow bg-body rounded" id="virtualScrollArea" style="overflow: auto;">
    <div id="recordsContainer" style="overflow:hidden;">
      <div id="displayArea"></div>
    </div>
  </div>
  <div class="recordHandler d-flex flex-column"></div>
</div>

<div class="mx-auto mt-5 mb-3" style="width: 30%;">
  <button class="w-100 btn btn-warning">新增支出</button>
</div>

<script>
  const oriRecords = JSON.parse('{{{toJsonStr records}}}');
  let records = oriRecords;
  let curCategory = '總覽';
  const totalAmountEle = document.getElementById('totalAmount');

  function displaySpecRecords(event) {
    if (event.target.matches('.categoryBtn')) {
      const reqCategoryName = event.target.dataset.categoryName;
      const reqCategoryId = Number(event.target.dataset.categoryId);

      document.getElementById('categoryDropdown').textContent = reqCategoryName;
      if (curCategory !== reqCategoryName) {
        records = reqCategoryId === -1
          ? oriRecords : oriRecords.filter((record) => record.categoryId === reqCategoryId);
        cssTricks.animateNumber(totalAmountEle, records.reduce((sum, record) => sum + record.amount, 0), 1000);
        virtualScroll.handleVirtualScroll(records);
      }
      curCategory = reqCategoryName;
    }
  }

  cssTricks.animateNumber(totalAmountEle, records.reduce((sum, record) => sum + record.amount, 0), 1000);
  document.querySelector('.recordHandler').innerHTML = Array.from({ length: 5 }, (_, index) => index).reduce((html, index) => (
    html + `
      <div class="flex-fill row justify-content-center align-items-center" style="">
        <div>
          <button type="button" class="btn btn-primary" id="edit-btn-${index}" data-record-id="${records[index].id}">修改</button>
          <button type="button" class="btn btn-danger ms-2" id="delete-btn-${index}" data-record-id="${records[index].id}">刪除</button>
        </div>
      </div>
    `
  ), '');
  virtualScroll.handleVirtualScroll(records);
</script>